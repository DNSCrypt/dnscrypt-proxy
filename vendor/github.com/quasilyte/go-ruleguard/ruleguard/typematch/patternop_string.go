// Code generated by "stringer -type=patternOp"; DO NOT EDIT.

package typematch

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[opBuiltinType-0]
	_ = x[opPointer-1]
	_ = x[opVar-2]
	_ = x[opVarSeq-3]
	_ = x[opSlice-4]
	_ = x[opArray-5]
	_ = x[opMap-6]
	_ = x[opChan-7]
	_ = x[opFunc-8]
	_ = x[opStructNoSeq-9]
	_ = x[opStruct-10]
	_ = x[opNamed-11]
}

const _patternOp_name = "opBuiltinTypeopPointeropVaropVarSeqopSliceopArrayopMapopChanopFuncopStructNoSeqopStructopNamed"

var _patternOp_index = [...]uint8{0, 13, 22, 27, 35, 42, 49, 54, 60, 66, 79, 87, 94}

func (i patternOp) String() string {
	if i < 0 || i >= patternOp(len(_patternOp_index)-1) {
		return "patternOp(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _patternOp_name[_patternOp_index[i]:_patternOp_index[i+1]]
}
