// Code generated by "stringer -type=opcode -trimprefix=op"; DO NOT EDIT.

package quasigo

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[opInvalid-0]
	_ = x[opPop-1]
	_ = x[opDup-2]
	_ = x[opPushParam-3]
	_ = x[opPushIntParam-4]
	_ = x[opPushLocal-5]
	_ = x[opPushIntLocal-6]
	_ = x[opPushFalse-7]
	_ = x[opPushTrue-8]
	_ = x[opPushConst-9]
	_ = x[opPushIntConst-10]
	_ = x[opSetLocal-11]
	_ = x[opSetIntLocal-12]
	_ = x[opIncLocal-13]
	_ = x[opDecLocal-14]
	_ = x[opReturnTop-15]
	_ = x[opReturnIntTop-16]
	_ = x[opReturnFalse-17]
	_ = x[opReturnTrue-18]
	_ = x[opJump-19]
	_ = x[opJumpFalse-20]
	_ = x[opJumpTrue-21]
	_ = x[opCallNative-22]
	_ = x[opIsNil-23]
	_ = x[opIsNotNil-24]
	_ = x[opNot-25]
	_ = x[opEqInt-26]
	_ = x[opNotEqInt-27]
	_ = x[opGtInt-28]
	_ = x[opGtEqInt-29]
	_ = x[opLtInt-30]
	_ = x[opLtEqInt-31]
	_ = x[opEqString-32]
	_ = x[opNotEqString-33]
	_ = x[opConcat-34]
	_ = x[opAdd-35]
	_ = x[opSub-36]
	_ = x[opStringSlice-37]
	_ = x[opStringSliceFrom-38]
	_ = x[opStringSliceTo-39]
	_ = x[opStringLen-40]
}

const _opcode_name = "InvalidPopDupPushParamPushIntParamPushLocalPushIntLocalPushFalsePushTruePushConstPushIntConstSetLocalSetIntLocalIncLocalDecLocalReturnTopReturnIntTopReturnFalseReturnTrueJumpJumpFalseJumpTrueCallNativeIsNilIsNotNilNotEqIntNotEqIntGtIntGtEqIntLtIntLtEqIntEqStringNotEqStringConcatAddSubStringSliceStringSliceFromStringSliceToStringLen"

var _opcode_index = [...]uint16{0, 7, 10, 13, 22, 34, 43, 55, 64, 72, 81, 93, 101, 112, 120, 128, 137, 149, 160, 170, 174, 183, 191, 201, 206, 214, 217, 222, 230, 235, 242, 247, 254, 262, 273, 279, 282, 285, 296, 311, 324, 333}

func (i opcode) String() string {
	if i >= opcode(len(_opcode_index)-1) {
		return "opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _opcode_name[_opcode_index[i]:_opcode_index[i+1]]
}
